# This configuration file is used to define the distribution of Quality Control (QC) and specimen samples
# within a multiwell plate. The file is structured into several sections, each responsible for different
# aspects of the plate layout.

[QC]
# These config parameters determine how QC samples are distributed on the plate. 

# QC round = a sequence of QC samples included before and/or 
#           after a sequence of analytical (specimen) samples

# should first well(s) be a QC round?
start_with_QC_round = true
# how many non-QC samples to analyze until we start a round of QC samples? 
run_QC_after_n_specimens = 11 

[QC.names] 
# Describes the key names and descriptions of the QC samples used.
EC = "EC: External_Control_(matrix)"
PB = "PB: Paper_Blank"
PO = "PO: Pooled_specimens"

[QC.patterns]
# Defines the hierarchy and patterns of QC sample placement throughout the plate

# Hierarchy of Patterns:
    # Specific Round Patterns: Highest priority. Specific instructions for individual rounds (e.g., `round_3`).
    # Start/End Patterns: Determine patterns for the beginning (`start`) and end (`end`) of the plate.
    # Repeat Pattern: Specifies a pattern (`repeat_pattern`) to be repeated a certain number of times.
    # Alternating Patterns: Defines alternating patterns (`then_alternating`) that provide a general structure.
    # Every N Rounds Patterns: Lowest priority. General patterns applied every N rounds (e.g., `every_4_rounds`).

# Pattern Examples:
    # `round_3 = ["EC", "PO", "PB"]`: Specific pattern for round 3.
    # `every_4_rounds = ["EC", "PB"]`: Pattern applied every 4 rounds.
    # `start = ["EC", "PB"]`: Pattern for the start of the plate.
    # `alternating = [["PB", "PO"], ["EC", "PO"]]`: Alternating patterns.
    # `end = ["PB"]: Pattern for the end of the plate.
    # `repeat_pattern = { pattern = ["EC", "PB"], times = 3 }`: Repeats the specified pattern 3 times.


# round_3 = ["EC", "PO", "PB"]
# round_7 = ["PO", "PO", "EC"]

# every_4_rounds = ["EC", "PB"]
# every_10_rounds = ["PB", "PO", "PO"]

# start = ["EC", "PB"]
alternating = [["EC", "PB"], ["EC", "PO"]]
# end = ["PB"]

# repeat_pattern = { pattern = ["EC", "PB"], times = 3 }



