[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "plate-layout"
description = 'A tool to create and visualize sample layouts for multiwell plates.'
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = []
authors = [
  { name = "Filip (Persson) Ljung", email = "filip.persson@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "numpy",
  "pandas",
  "tomli",
  "matplotlib",
  "openpyxl"
  ]

dynamic = ["version"]

[project.urls]
#Documentation = "https://github.com/unknown/plate-layout#readme"
#Issues = "https://github.com/unknown/plate-layout/issues"
Source = "https://github.com/ssi-dk/CD-MRG-plate_layout"

# add entry point for CLI 
[project.scripts]
plate-layout = "plate_layout.cli:main"

[tool.hatch.version]
path = "plate_layout/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "pytest-cov",
]
[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=plate_layout --cov=tests {args}"
no-cov = "cov --no-cov {args}"

[[tool.hatch.envs.test.matrix]]
python = ["39", "310", "311"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "plate_layout/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

# [publish.index.repos.test]
# url = "https://test.pypi.org/legacy/"
# user = "__token__"
# auth = "pypi-<SECRET>"
# ca-cert = "/path/to/ca-bundle.crt"